/*
  1. TYPOGRAPHY SYSTEM
    1.1. FONT-SIZE SYSTEM (px):
    10 / 12 / 14 / 16 / 18 / 20 / 24 / 30 / 36 / 44 / 52 / 62 / 74 / 86 / 98

    1.2. FONT-WEIGHTS:
      Default: 400
      Medium: 500
      Semi-bold: 600
      Bold: 700

    1.3. LINE-HEIGHTS:
      Default: 1
      Main Header: 1.05
      Hero Paragraph: 1.6

  2. COLORS
    2.1. Primary: #e67e22
    2.2. Tints: #fdf2e9
    2.3. Shades: #cf711f
    2.4. Accents:
    2.5. Grays: #555, #333

  3. IMAGES: Unsplash

  4. ICONS: Delivered by Omnifood

  5. SHADOWS: 

  6. BORDER-RADIUS:
    Default: 9px (0.9rem)

  7. WHITESPACE
    SPACING SYSTEM (px):
    2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128
*/

@import url('https://fonts.googleapis.com/css2?family=Rubik:wght@400;500;600;700&display=swap');

/** Global reset */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/** Defining some global variables */
:root {
  --primary-color: #e67e22;
  --main-shade: #cf711f;
  --main-tint: #fdf2e9;
  --gray-color: #555;
  --secondary-gray: #333;

  --default-border-radius: 9px;

  --line-height-small: 1.05;
  --line-height-big: 1.6;

  --font-weight-default: 400;
  --font-weight-medium: 500;
  --font-weight-semi-bold: 600;
  --font-weight-bold: 700;
}

/** Default font-size: 16px */
/** We want to set it to 10px, so we can work easily with rem */
/** So we need to calculate the percentage of the user's browser font-size setting, which is 10px / 16px = 0.625 = 62.5% */
html {
  font-size: 62.5%;
}

/** First we choose a generic family and then we think for a specific font */
/** Default styles */
body {
  font-family: "Rubik", sans-serif;
  font-weight: 400;
  line-height: 1;
  color: var(--gray-color);
}

/****************************************/
    /** General Reusable Components */
/****************************************/

.container {
  /* 1140px */
  max-width: 120rem;
  padding: 0 3.2rem;
  margin: 0 auto;
}

/** Reusable grid */
.grid {
  display: grid;
  gap: 9.6rem;
}

.grid--2-cols {
  grid-template-columns: repeat(2, 1fr);
}

.grid--3-cols {
  grid-template-columns: repeat(3, 1fr);
}

.grid--4-cols {
  grid-template-columns: repeat(4, 1fr);
}

.heading-primary {
  font-size: 5.2rem;  /** 5.2rem = 52px */
  font-weight: 700;
  line-height: 1.05;
  letter-spacing: -0.5px;
  color: var(--secondary-gray);
  margin-bottom: 3.2rem;
}

.btn:link, .btn:visited {
  display: inline-block;  /** Applies vertical padding */
  font-size: 2rem;
  font-weight: 600;
  text-decoration: none;
  padding: 1.6rem 3.2rem;
  border-radius: 0.9rem;
  /** Putting transition to the original "state" */
  transition: background-color 0.3s;
}

.btn--full:link, .btn--full:visited {
  background-color: var(--primary-color);
  color: #fff;
}

.btn--full:hover, .btn--full:active {
  background-color: var(--main-shade);
}

.btn--outline:link, .btn--outline:visited {
  background-color: #fff;
  color: var(--gray-color);
}

.btn--outline:hover, .btn--outline:active {
  background-color: var(--main-tint);
  /** Trick to add border inside */
  /** inset - shadow will be added inside of the element */
  box-shadow: inset 0 0 0 3px #fff;
}

/** Helper class (we don't want all the links to apply the margin-right rule */
/** We could also use Flexbox, but that seems too much work */
/** It's not necessary to use !important but we want to ensure that this rule has the highest priority */
.margin-right-sm {
  margin-right: 1.6rem !important;  
}

/****************************************/
              /** HEADER */
/****************************************/

.header {
  background-color: var(--main-tint);
  /** We are setting height, because later this header will become "sticky" */
  height: 9.6rem; 
  padding: 0 48px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.logo {
  height: 2.2rem;
}

/****************************************/
            /** NAVIGATION */
/****************************************/

.main-nav-list {
  list-style-type: none;
  display: flex;
  align-items: center;
  gap: 3.2rem;
}

.main-nav-link:link, .main-nav-link:visited {
  display: inline-block;
  text-decoration: none;
  color: var(--secondary-gray);
  font-weight: 500;
  font-size: 1.8rem;
  transition: all 0.3s;
}

.main-nav-link:hover, .main-nav-link:active {
  color: var(--main-shade);
}

/** CTA = Call to Action (Last link of the navigation) */
/** We add .main-nav-link to increase the specificity of the last link so these styles will always apply */
.main-nav-link.nav-cta:link, 
.main-nav-link.nav-cta:visited {
  color: #fff;
  background-color: var(--primary-color);
  padding: 1.2rem 2.4rem;
  border-radius: 0.9rem;
}

.main-nav-link.nav-cta:hover, 
.main-nav-link.nav-cta:active {
  background-color: var(--main-shade);
}

/****************************************/
            /** HERO SECTION */
/****************************************/

.section-hero {
  background-color: var(--main-tint);
  padding: 4.8rem 0 9.6rem 0;
  /* height: 100vh;  * Full screen viewport height */
}

.hero {
  /** When the element is larger than to container, it will occupy 100% of it */
  max-width: 130rem;  /** 130rem = 1300px (1rem = 10px) */
  margin: 0 auto; /** Center the container */
  padding: 0 3.2rem;
  display: grid;  /** Putting the content and image side by side */
  grid-template-columns: repeat(2, 1fr);  /** 2 equal columns */
  gap: 9.6rem;
  align-items: center;
}

.hero-description {
  font-size: 2rem;
  line-height: 1.6;
  margin-bottom: 4.8rem;
}

.delivered-meals {
  margin-top: 8rem;
  display: flex;
  align-items: center;
  gap: 1.6rem;
}

.delivered-images {
  display: flex;
}

.delivered-images img {
  height: 4.8rem;
  /** Safari has a bug, which treats images as flex items */
  /** That's why we specify the width (but we don't need to) */
  width: 4.8rem; 
  border: 3px solid var(--main-tint);
  border-radius: 50%;
  margin-right: -1.6rem;  /** Overlapping the images */
}

/** Removes the margin from the last image, because it breaks the gap between the images and the text */
.delivered-images img:last-child {
  margin-right: 0;
}

.delivered-text {
  font-size: 1.8rem;
  font-weight: 600;
}

.delivered-text span {
  color: var(--main-shade);   /** Contrast Checker ratio is poor but it does the job */
  font-weight: 700;
}

/** Takes 50% of the page (full width of the Grid container) */
.hero-img {
  width: 100%;  
}

/****************************************/
        /** HOW IT WORKS SECTION */
/****************************************/

.section-how {
  padding: 9.6rem 0;
}